{"version":3,"file":"ask.js","sourceRoot":"","sources":["../../src/textgen/ask.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAIpD,MAAM,CAAC,MAAM,GAAG,GACd,CAAiC,GAAiC,EAAE,EAAE,CACtE,KAAK,EAAE,EACL,WAAW,EACX,aAAa,EACb,SAAS,GAAG,EAAE,GAAG,IAAI,EACrB,KAAK,GAMN,EAA+B,EAAE;IAChC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;QAC3C,MAAM,GAAG,CAAC,WAAW,CAAC;YACpB,OAAO,EAAE;gBACP,SAAS;aACV;YAED,OAAO,EAAE,kBAAkB;YAC3B,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE;gBAC7B,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;oBAClB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACvB,OAAO;gBACT,CAAC;YACH,CAAC;YACD,OAAO,EAAE;gBACP,IAAI,EAAE;oBACJ,KAAK;oBACL,MAAM,EAAE,IAAI;oBACZ,QAAQ,EAAE;wBACR,GAAG,CACD,aAAa,EACb,CAAC,OAAO,EAAE,EAAE,CACV,CAAC;4BACC,IAAI,EAAE,QAAQ;4BACd,OAAO;yBACE,CAAA,CACd;wBACD;4BACE,IAAI,EAAE,MAAM;4BACZ,OAAO,EAAE,WAAW;yBACZ;qBACX,CAAC,MAAM,CAAC,SAAS,CAAC;iBACpB;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { iff, isDefined } from \"@mjt-engine/object\";\nimport type { TextgenConnectionMap } from \"../TextgenConnectionMap\";\nimport type { MessageConnectionInstance } from \"@mjt-engine/message/dist/createConnection\";\n\nexport const ask =\n  <M extends TextgenConnectionMap>(con: MessageConnectionInstance<M>) =>\n  async ({\n    userMessage,\n    systemMessage,\n    timeoutMs = 60 * 1000,\n    model,\n  }: {\n    systemMessage?: string;\n    userMessage: string;\n    timeoutMs?: number;\n    model?: string;\n  }): Promise<string | undefined> => {\n    return new Promise(async (resolve, reject) => {\n      await con.requestMany({\n        options: {\n          timeoutMs,\n        },\n\n        subject: \"textgen.generate\",\n        onResponse: async (response) => {\n          if (response.done) {\n            resolve(response.text);\n            return;\n          }\n        },\n        request: {\n          body: {\n            model,\n            stream: true,\n            messages: [\n              iff(\n                systemMessage,\n                (content) =>\n                  ({\n                    role: \"system\",\n                    content,\n                  } as const)\n              ),\n              {\n                role: \"user\",\n                content: userMessage,\n              } as const,\n            ].filter(isDefined),\n          },\n        },\n      });\n    });\n  };\n"]}